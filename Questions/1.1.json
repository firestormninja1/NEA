{
    "Which bus retrieves instructions and data from main memory?": {
        "options": ["Data","Memory","Control","Retrieval"],
        "feedback": "The data bus retrieves data and instructions from main memory. The address bus sends addresses to main memory. The control bus sends read right signals to main memory.",
        "user1": [0, 0]
    },
    "What is the purpose of the Accumulator?": {
        "options": ["Holds the result of calculations and operations performed by the arithmetic and logic unit.",
                    "Holds the data that has been retrieved from memory, or that is about to be stored in memory.",
                    "Holds the address of the location in memory where data is to be retrieved or stored.",
                    "Holds the memory location address of the next instruction to be performed by the central processing unit."],

        "feedback": "The program counter holds the memory location address of the next instruction to be performed by the central processing unit.  Memory data register holds the data that has been retrieved from memory, or that is about to be stored in memory. Accumulator holds the result of calculations and operations performed by the arithmetic and logic unit.",
        "user1": [0, 0]
    },
    "Which of the following are examples of Boolean operators": {
        "options": ["AND","YES","UP","WHERE"],
        "feedback": "The basic boolean operators required for this specification are: OR, NOT, AND, XOR",
        "user1": [0, 0]
    },
    "Which of the following can be adjusted to improve the performance of a CPU?": {
        "options": ["Increase the number of cores","Decrease the Cache","Remove the OS","Get a bigger motherboard"],
        "feedback": "Each core of a CPU can execute its own independent Fetch Decode Execute (FDE) cycle. A computer with multiple cores can complete more than one FDE cycle at any given time. However to fully utilise multiple cores, the program has be designed in a way that can adapt to this efficiently.",
        "user1": [0, 0]
    }
}